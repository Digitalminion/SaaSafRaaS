/*!
 * SaaS-sa-Fraas
 * Copyright Â© 2025 Digital Minion (digitalminion.com)
 * 
 * Repository: https://github.com/digitalminion/SaaS-sa-Fraas
 * Author: @dataminion
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
 // Proceed with caution if making changes to this file.

@use 'sass:map';
@use '@angular/material' as mat;

$_palettes: (
  primary: (
    0: #000000,
    10: #3a0b01,
    20: #55200f,
    25: #642a19,
    30: #723523,
    35: #80402d,
    40: #8f4c38,
    50: #ac644e,
    60: #cb7c66,
    70: #e9967e,
    80: #ffb59f,
    90: #ffdbd1,
    95: #ffede8,
    98: #fff8f6,
    99: #fffbff,
    100: #ffffff,
  ),
  secondary: (
    0: #000000,
    10: #2c160f,
    20: #442a22,
    25: #50352d,
    30: #5d4037,
    35: #6a4b42,
    40: #77574e,
    50: #926f65,
    60: #ad887e,
    70: #caa298,
    80: #e7bdb2,
    90: #ffdbd1,
    95: #ffede8,
    98: #fff8f6,
    99: #fffbff,
    100: #ffffff,
  ),
  tertiary: (
    0: #000000,
    10: #231b00,
    20: #3b2f05,
    25: #473a0f,
    30: #53461a,
    35: #5f5124,
    40: #6c5d2f,
    50: #867645,
    60: #a18f5c,
    70: #bdaa74,
    80: #d9c58d,
    90: #f6e1a7,
    95: #fff0ca,
    98: #fff8f0,
    99: #fffbff,
    100: #ffffff,
  ),
  neutral: (
    0: #000000,
    10: #211a18,
    20: #372f2c,
    25: #423a37,
    30: #4e4542,
    35: #5a504e,
    40: #665c5a,
    50: #807572,
    60: #9a8e8b,
    70: #b5a9a5,
    80: #d1c4c0,
    90: #eedfdc,
    95: #fceeea,
    98: #fff8f6,
    99: #fffbff,
    100: #ffffff,
    4: #130d0b,
    6: #181210,
    12: #251e1c,
    17: #302826,
    22: #3b3331,
    24: #403735,
    87: #e5d7d4,
    92: #f3e5e2,
    94: #f9ebe7,
    96: #fff1ed,
  ),
  neutral-variant: (
    0: #000000,
    10: #251915,
    20: #3c2d29,
    25: #473834,
    30: #53433f,
    35: #604f4a,
    40: #6c5a56,
    50: #86736e,
    60: #a18c87,
    70: #bca6a1,
    80: #d9c2bb,
    90: #f6ddd7,
    95: #ffede8,
    98: #fff8f6,
    99: #fffbff,
    100: #ffffff,
  ),
  error: (
    0: #000000,
    10: #410002,
    20: #690005,
    25: #7e0007,
    30: #93000a,
    35: #a80710,
    40: #ba1a1a,
    50: #de3730,
    60: #ff5449,
    70: #ff897d,
    80: #ffb4ab,
    90: #ffdad6,
    95: #ffedea,
    98: #fff8f7,
    99: #fffbff,
    100: #ffffff,
  ),
);

$_rest: (
  secondary: map.get($_palettes, secondary),
  neutral: map.get($_palettes, neutral),
  neutral-variant: map.get($_palettes,  neutral-variant),
  error: map.get($_palettes, error),
);

$primary-palette: map.merge(map.get($_palettes, primary), $_rest);
$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);

@function _high-contrast-value($light, $dark, $theme-type) {
  @if ($theme-type == light) {
    @return $light;
  }
  @if ($theme-type == dark) {
    @return $dark;
  }
  @if ($theme-type == color-scheme) {
    @return light-dark(#{$light}, #{$dark});
  }
  
  @error 'Unknown theme-type #{$theme-type}. Expected light, dark, or color-scheme';
}

@mixin high-contrast-overrides($theme-type) {
  @include mat.theme-overrides((
    primary: _high-contrast-value(#501b0b, #ffece7, $theme-type),
    on-primary: _high-contrast-value(#ffffff, #000000, $theme-type),
    primary-container: _high-contrast-value(#753725, #ffaf98, $theme-type),
    on-primary-container: _high-contrast-value(#ffffff, #1e0300, $theme-type),
    inverse-primary: _high-contrast-value(#ffb59f, #733624, $theme-type),
    primary-fixed: _high-contrast-value(#753725, #ffdbd1, $theme-type),
    primary-fixed-dim: _high-contrast-value(#582211, #ffb59f, $theme-type),
    on-primary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-primary-fixed-variant: _high-contrast-value(#ffffff, #280500, $theme-type),
    secondary: _high-contrast-value(#3f261e, #ffece7, $theme-type),
    on-secondary: _high-contrast-value(#ffffff, #000000, $theme-type),
    secondary-container: _high-contrast-value(#60423a, #e3b9ae, $theme-type),
    on-secondary-container: _high-contrast-value(#ffffff, #190603, $theme-type),
    secondary-fixed: _high-contrast-value(#60423a, #ffdbd1, $theme-type),
    secondary-fixed-dim: _high-contrast-value(#462c24, #e7bdb2, $theme-type),
    on-secondary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-secondary-fixed-variant: _high-contrast-value(#ffffff, #200b06, $theme-type),
    tertiary: _high-contrast-value(#372b02, #ffefc7, $theme-type),
    on-tertiary: _high-contrast-value(#ffffff, #000000, $theme-type),
    tertiary-container: _high-contrast-value(#56481c, #d5c18a, $theme-type),
    on-tertiary-container: _high-contrast-value(#ffffff, #100b00, $theme-type),
    tertiary-fixed: _high-contrast-value(#56481c, #f6e1a7, $theme-type),
    tertiary-fixed-dim: _high-contrast-value(#3e3107, #d9c58d, $theme-type),
    on-tertiary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-tertiary-fixed-variant: _high-contrast-value(#ffffff, #171000, $theme-type),
    background: _high-contrast-value(#fff8f6, #181210, $theme-type),
    on-background: _high-contrast-value(#211a18, #eedfdc, $theme-type),
    surface: _high-contrast-value(#fff8f6, #181210, $theme-type),
    surface-dim: _high-contrast-value(#c3b6b3, #181210, $theme-type),
    surface-bright: _high-contrast-value(#fff8f6, #574e4c, $theme-type),
    surface-container-lowest: _high-contrast-value(#ffffff, #000000, $theme-type),
    surface-container: _high-contrast-value(#eedfdc, #372f2c, $theme-type),
    surface-container-high: _high-contrast-value(#dfd1ce, #423a37, $theme-type),
    surface-container-highest: _high-contrast-value(#d1c4c0, #4e4542, $theme-type),
    on-surface: _high-contrast-value(#000000, #ffffff, $theme-type),
    shadow: _high-contrast-value(#000000, #000000, $theme-type),
    scrim: _high-contrast-value(#000000, #000000, $theme-type),
    surface-tint: _high-contrast-value(#8f4c38, #ffb59f, $theme-type),
    inverse-surface: _high-contrast-value(#372f2c, #eedfdc, $theme-type),
    inverse-on-surface: _high-contrast-value(#ffffff, #000000, $theme-type),
    outline: _high-contrast-value(#372925, #ffece7, $theme-type),
    outline-variant: _high-contrast-value(#564541, #d5beb8, $theme-type),
    error: _high-contrast-value(#600004, #ffece9, $theme-type),
    on-error: _high-contrast-value(#ffffff, #000000, $theme-type),
    error-container: _high-contrast-value(#98000a, #ffaea4, $theme-type),
    on-error-container: _high-contrast-value(#ffffff, #220001, $theme-type),
    surface-variant: _high-contrast-value(#f6ddd7, #53433f, $theme-type),
    on-surface-variant: _high-contrast-value(#000000, #ffffff, $theme-type),
  ))
 }
 $theme: (
  primary: map.merge(map.get($_palettes, primary), $_rest),
  tertiary: map.merge(map.get($_palettes, tertiary), $_rest),
  secondary: map.get($_palettes, secondary),
  neutral: map.get($_palettes, neutral),
  neutral-variant: map.get($_palettes,  neutral-variant),
  error: map.get($_palettes, error),
);