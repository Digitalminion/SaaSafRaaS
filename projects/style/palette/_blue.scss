/*!
 * SaaS-sa-Fraas
 * Copyright Â© 2025 Digital Minion (digitalminion.com)
 * 
 * Repository: https://github.com/digitalminion/SaaS-sa-Fraas
 * Author: @dataminion
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
 // Proceed with caution if making changes to this file.

@use 'sass:map';
@use '@angular/material' as mat;

$_palettes: (
  primary: (
    0: #000000,
    10: #001b3e,
    20: #0a305f,
    25: #1a3b6b,
    30: #274777,
    35: #345384,
    40: #415f91,
    50: #5a77ab,
    60: #7491c7,
    70: #8eace3,
    80: #aac7ff,
    90: #d6e3ff,
    95: #ecf0ff,
    98: #f9f9ff,
    99: #fdfbff,
    100: #ffffff,
  ),
  secondary: (
    0: #000000,
    10: #131c2b,
    20: #283141,
    25: #333c4c,
    30: #3e4758,
    35: #4a5364,
    40: #565f71,
    50: #6e778a,
    60: #8891a4,
    70: #a2abc0,
    80: #bec7db,
    90: #dae3f8,
    95: #ecf0ff,
    98: #f9f9ff,
    99: #fdfbff,
    100: #ffffff,
  ),
  tertiary: (
    0: #000000,
    10: #29132f,
    20: #3f2845,
    25: #4b3350,
    30: #573e5c,
    35: #634969,
    40: #705575,
    50: #8a6d8f,
    60: #a587a9,
    70: #c1a1c5,
    80: #ddbce1,
    90: #fad7fe,
    95: #ffebfe,
    98: #fff7fb,
    99: #fffbff,
    100: #ffffff,
  ),
  neutral: (
    0: #000000,
    10: #1d1d00,
    20: #333200,
    25: #3e3e00,
    30: #4a4900,
    35: #565500,
    40: #626100,
    50: #7c7b00,
    60: #96951a,
    70: #b1b036,
    80: #cdcc4f,
    90: #eae868,
    95: #f8f774,
    98: #fffdbd,
    99: #fffbff,
    100: #ffffff,
    4: #0f0f00,
    6: #141400,
    12: #212100,
    17: #2c2c00,
    22: #373700,
    24: #3c3b00,
    87: #e1e060,
    92: #f0ee6d,
    94: #f5f472,
    96: #fbfa77,
  ),
  neutral-variant: (
    0: #000000,
    10: #181c23,
    20: #2d3038,
    25: #383b43,
    30: #43474f,
    35: #4f525b,
    40: #5b5e67,
    50: #747780,
    60: #8e909a,
    70: #a8abb5,
    80: #c4c6d0,
    90: #e0e2ec,
    95: #eef0fb,
    98: #f9f9ff,
    99: #fdfbff,
    100: #ffffff,
  ),
  error: (
    0: #000000,
    10: #410002,
    20: #690005,
    25: #7e0007,
    30: #93000a,
    35: #a80710,
    40: #ba1a1a,
    50: #de3730,
    60: #ff5449,
    70: #ff897d,
    80: #ffb4ab,
    90: #ffdad6,
    95: #ffedea,
    98: #fff8f7,
    99: #fffbff,
    100: #ffffff,
  ),
);

$_rest: (
  secondary: map.get($_palettes, secondary),
  neutral: map.get($_palettes, neutral),
  neutral-variant: map.get($_palettes,  neutral-variant),
  error: map.get($_palettes, error),
);

$primary-palette: map.merge(map.get($_palettes, primary), $_rest);
$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);

@function _high-contrast-value($light, $dark, $theme-type) {
  @if ($theme-type == light) {
    @return $light;
  }
  @if ($theme-type == dark) {
    @return $dark;
  }
  @if ($theme-type == color-scheme) {
    @return light-dark(#{$light}, #{$dark});
  }
  
  @error 'Unknown theme-type #{$theme-type}. Expected light, dark, or color-scheme';
}

@mixin high-contrast-overrides($theme-type) {
  @include mat.theme-overrides((
    primary: _high-contrast-value(#032b5b, #ebf0ff, $theme-type),
    on-primary: _high-contrast-value(#ffffff, #000000, $theme-type),
    primary-container: _high-contrast-value(#2a497a, #a6c3fc, $theme-type),
    on-primary-container: _high-contrast-value(#ffffff, #000b20, $theme-type),
    inverse-primary: _high-contrast-value(#aac7ff, #294878, $theme-type),
    primary-fixed: _high-contrast-value(#2a497a, #d6e3ff, $theme-type),
    primary-fixed-dim: _high-contrast-value(#0e3262, #aac7ff, $theme-type),
    on-primary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-primary-fixed-variant: _high-contrast-value(#ffffff, #00112b, $theme-type),
    secondary: _high-contrast-value(#232c3c, #ebf0ff, $theme-type),
    on-secondary: _high-contrast-value(#ffffff, #000000, $theme-type),
    secondary-container: _high-contrast-value(#40495b, #bac3d8, $theme-type),
    on-secondary-container: _high-contrast-value(#ffffff, #030b1a, $theme-type),
    secondary-fixed: _high-contrast-value(#40495b, #dae3f8, $theme-type),
    secondary-fixed-dim: _high-contrast-value(#2a3343, #bec7db, $theme-type),
    on-secondary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-secondary-fixed-variant: _high-contrast-value(#ffffff, #081120, $theme-type),
    tertiary: _high-contrast-value(#3b2340, #ffe9fe, $theme-type),
    on-tertiary: _high-contrast-value(#ffffff, #000000, $theme-type),
    tertiary-container: _high-contrast-value(#5a405f, #d9b8dd, $theme-type),
    on-tertiary-container: _high-contrast-value(#ffffff, #17031d, $theme-type),
    tertiary-fixed: _high-contrast-value(#5a405f, #fad7fe, $theme-type),
    tertiary-fixed-dim: _high-contrast-value(#422a47, #ddbce1, $theme-type),
    on-tertiary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-tertiary-fixed-variant: _high-contrast-value(#ffffff, #1d0824, $theme-type),
    background: _high-contrast-value(#fffdbd, #141400, $theme-type),
    on-background: _high-contrast-value(#1d1d00, #eae868, $theme-type),
    surface: _high-contrast-value(#fffdbd, #141400, $theme-type),
    surface-dim: _high-contrast-value(#bfbe42, #141400, $theme-type),
    surface-bright: _high-contrast-value(#fffdbd, #535300, $theme-type),
    surface-container-lowest: _high-contrast-value(#ffffff, #000000, $theme-type),
    surface-container: _high-contrast-value(#eae868, #333200, $theme-type),
    surface-container-high: _high-contrast-value(#dbda5b, #3e3e00, $theme-type),
    surface-container-highest: _high-contrast-value(#cdcc4f, #4a4900, $theme-type),
    on-surface: _high-contrast-value(#000000, #ffffff, $theme-type),
    shadow: _high-contrast-value(#000000, #000000, $theme-type),
    scrim: _high-contrast-value(#000000, #000000, $theme-type),
    surface-tint: _high-contrast-value(#415f91, #aac7ff, $theme-type),
    inverse-surface: _high-contrast-value(#333200, #eae868, $theme-type),
    inverse-on-surface: _high-contrast-value(#ffffff, #000000, $theme-type),
    outline: _high-contrast-value(#292c34, #edeffa, $theme-type),
    outline-variant: _high-contrast-value(#464951, #c0c2cc, $theme-type),
    error: _high-contrast-value(#600004, #ffece9, $theme-type),
    on-error: _high-contrast-value(#ffffff, #000000, $theme-type),
    error-container: _high-contrast-value(#98000a, #ffaea4, $theme-type),
    on-error-container: _high-contrast-value(#ffffff, #220001, $theme-type),
    surface-variant: _high-contrast-value(#e0e2ec, #43474f, $theme-type),
    on-surface-variant: _high-contrast-value(#000000, #ffffff, $theme-type),
  ))
 }

 $theme: (
  primary: map.merge(map.get($_palettes, primary), $_rest),
  tertiary: map.merge(map.get($_palettes, tertiary), $_rest),
  secondary: map.get($_palettes, secondary),
  neutral: map.get($_palettes, neutral),
  neutral-variant: map.get($_palettes,  neutral-variant),
  error: map.get($_palettes, error),
);